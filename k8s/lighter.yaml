# https://github.com/exacaster/lighter/blob/0.0.45/quickstart/lighter.yml
apiVersion: v1
kind: Namespace
metadata:
  name: spark
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lighter
  namespace: spark
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: lighter
  namespace: spark
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "configmaps", "pods/log"]
    verbs: ["*"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: lighter
  namespace: spark
subjects:
  - kind: ServiceAccount
    name: lighter
    namespace: spark
roleRef:
  kind: Role
  name: lighter
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: lighter
  namespace: spark
  labels:
    run: lighter
spec:
  ports:
    -   name: api
        port: 8080
        protocol: TCP
    -   name: javagw
        port: 25333
        protocol: TCP
  selector:
    run: lighter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: spark
  name: lighter
spec:
  selector:
    matchLabels:
      run: lighter
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        run: lighter
    spec:
      containers:
        -   image: ghcr.io/exacaster/lighter:0.0.45-spark3.4.0
            name: lighter
            readinessProbe:
              httpGet:
                path: /health/readiness
                port: 8080
              initialDelaySeconds: 5
              periodSeconds: 15
            resources:
              requests:
                cpu: "0.25"
                memory: "512Mi"
            ports:
              -   containerPort: 8080
            env:
              - name: LIGHTER_SESSION_DEFAULT_CONF
                value: >-
                  {"spark.eventLog.dir":"s3a://datateam-spark/logs","spark.eventLog.enabled":"true","spark.history.fs.inProgressOptimization.enabled":"true","spark.history.fs.update.interval":"5s","spark.kubernetes.container.image":"171092530978.dkr.ecr.ap-southeast-1.amazonaws.com/octan/sparkonk8s:0.0.20","spark.kubernetes.container.image.pullPolicy":"IfNotPresent","spark.kubernetes.driver.podTemplateFile":"s3a://datateam-spark/driver_pod_template.yml","spark.kubernetes.executor.podTemplateFile":"s3a://datateam-spark/executor_pod_template.yml","spark.dynamicAllocation.enabled":"true","spark.dynamicAllocation.shuffleTracking.enabled":"true","spark.dynamicAllocation.maxExecutors":"5","spark.dynamicAllocation.executorAllocationRatio":"0.5","spark.dynamicAllocation.sustainedSchedulerBacklogTimeout":"30","spark.dynamicAllocation.executorIdleTimeout":"60s","spark.driver.memory":"4g","spark.kubernetes.driver.request.cores":"2","spark.kubernetes.driver.limit.cores":"4","spark.executor.memory":"4g","spark.kubernetes.executor.request.cores":"2","spark.kubernetes.executor.limit.cores":"4","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.hadoop.fs.s3a.connection.ssl.enabled":"false","spark.hadoop.fs.s3a.fast.upload":"true","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.sources.ignoreDataLocality.enabled":"true","spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version":"2"}
              - name: LIGHTER_KUBERNETES_ENABLED
                value: 'true'
              - name: LIGHTER_MAX_RUNNING_JOBS
                value: '5'
              - name: LIGHTER_KUBERNETES_SERVICE_ACCOUNT
                value: lighter
      serviceAccountName: lighter